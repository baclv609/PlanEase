import { defineStore } from "pinia";
import { useSettings } from "@/composables/useSettings";
import { useI18n } from "vue-i18n";

export const useSettingsStore = defineStore("settings", {
  state: () => ({
    // üñ• C√†i ƒë·∫∑t giao di·ªán
    displayMode: "timeGridWeek",
    showWeekNumbers: false,
    themeMode: "light",

    // C√†i ƒë·∫∑t th·ªùi gian
    timeZone: "Asia/Ho_Chi_Minh",
    timeFormat: "24h",
    slotDuration: "00:30:00",
    language: localStorage.getItem("appLanguage") || "vi",

    // C√†i ƒë·∫∑t l·ªãch
    titleFormat: { year: "numeric", month: "long" }, // ƒê·ªãnh d·∫°ng ti√™u ƒë·ªÅ l·ªãch
    dayHeaderFormat: { weekday: "long", day: "numeric" }, // ƒê·ªãnh d·∫°ng ng√†y trong c·ªôt
    dateFormat: "YYYY-MM-DD", // M·∫∑c ƒë·ªãnh hi·ªÉn th·ªã theo chu·∫©n YYYY-MM-DD
    eventTimeFormat: { hour: "2-digit", minute: "2-digit", meridiem: false }, // ƒê·ªãnh d·∫°ng ng√†y trong s·ª± ki·ªán
    initialDate: new Date().toISOString().split("T")[0], // Ng√†y b·∫Øt ƒë·∫ßu
    firstDay: 1, // Ng√†y ƒë·∫ßu tu·∫ßn (0 = Ch·ªß nh·∫≠t, 1 = Th·ª© hai)
    multiMonthYear: false, // Hi·ªÉn th·ªã nhi·ªÅu th√°ng

    // validRange: { start: "2025-01-01", end: "2025-12-31" }, // Gi·ªõi h·∫°n ng√†y

    // Th√¥ng b√°o & Nh·∫Øc nh·ªü
    enableNotifications: true,
    reminderTime: "10m",

    // S·ª± ki·ªán l·∫∑p l·∫°i
    enableRecurringEvents: true,
    defaultRecurrence: "none",

    calendarRef: null, // L∆∞u tham chi·∫øu ƒë·∫øn FullCalendar
  }),

  actions: {
    updateSetting(key, value) {
      this[key] = value;
      this.saveToLocalStorage(); // Lu√¥n l∆∞u l·∫°i khi c·∫≠p nh·∫≠t
      this.updateFullCalendar();
    },
    saveToLocalStorage() {
      const settingsToSave = {
        timeZone: this.timeZone,
        timeFormat: this.timeFormat,
        language: this.language,
        themeMode: this.themeMode,
        firstDay: this.firstDay,
      };
      localStorage.setItem("userSettings", JSON.stringify(settingsToSave));
    },
    changeLanguage(newLang) {
      this.language = newLang;
      localStorage.setItem(
        "userSettings",
        JSON.stringify({ language: newLang })
      );

      const { locale } = useI18n();
      locale.value = newLang; // C·∫≠p nh·∫≠t Vue I18n
    },
    // C·∫≠p nh·∫≠t c√†i ƒë·∫∑t l·ªãch
    updateColumnHeaderFormat(newValue) {
      this.dayHeaderFormat = newValue;
      this.updateFullCalendar();
    },
    // ƒê·ªãnh d·∫°ng ti√™u ƒë·ªÅ l·ªãch
    updateTitleFormat(newValue) {
      this.titleFormat = newValue;
      this.updateFullCalendar();
    },
    loadFromLocalStorage() {
      const savedSettings = localStorage.getItem("userSettings");
      if (savedSettings) {
        this.$patch(JSON.parse(savedSettings));
      }
    },
    setCalendarRef(ref) {
      this.calendarRef = ref;
    },
    
    updateFullCalendar() {
      if (this.calendarRef) {
        this.calendarRef.getApi().refetchEvents();
      }
    },
    updateDisplayMode(newMode) {
      this.displayMode = newMode;
    },
  },
});
